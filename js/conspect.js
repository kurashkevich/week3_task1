/*


    ТИПЫ ДАННЫХ. Продолжение


* Объекты могут содержать в себе функции, такие функции называются методами. => Функции это все что не принадлежит объекту,
* Методы - функции принадлежащие какому либо объекту.
*
* Метод isPrimitive(obj) - возвращает true, если объект является примитивом. False если сложным объектом
* Метод typeof obj.toString() - Проверяет, есть ли у объекта метод toString
* При сравнении сложныъ типов (функции, массивы, объектв) результат всегда false
*
* == - Сравнение по значению
* === - Сравнение по значению и по типу
*
* Преобразование в строку:
* String(obj);
* '' + obj;
*
* Метод Object.DefineProperty - позволяет определить свойства у объекта. Например гетторы и сетторы. (см функцию 1)
*
* У объектов конфигурирования есть 3 свойства, по умолчанию false.
* writable - если false - при попытки присваивания полю нового значения, операция пройдет, но значение не изменится
* Enumerable - если false, то свойство не будет доступно при итерировании по объекту методом for..in
* Configurable - если false, то не будет доступно удаление поля, оператором delete obj.name;
*
* _likes - означает внутрнее свойство
*
* Object.getOwnPropertyDescriptor() - получить параметры конфигурации объекта.
*
* Заморозка объектов - это когда объекты неизменяемые
* Object.freeze(obj);
* Object.isFrozen(obj); - проверка, заморожен ли объект
*
*
* new Date() - создание объекта даты, текущий момент времени
* В зависимости от параметров, дата попытается распарсится
*
* Math - матисатическая библиотека
* Math.rendom
* Math.min(1,5) // 1
* Math.max(1,5) // 5
*
* floor, log, pow, sin - Читайте доку)
*
*
*
* */


//============= 1 =============================
var tweet = {
    _likes: 15
};

Object.defineProperty(tweet, 'likes', {
    get: function () {
        return this._likes;
    },
    set: function (value) {
        this._likes = parseInt(value) || 0;
    },
});

function test() {
    tweet.likes = 26;
    console.log(tweet.likes);
}
test();

//============= 1 =============================